{
    "collab_server" : "",
    "contents" : "rm(list=ls())\nlibrary(Reumannplatz)\nlibrary(igraph)\n\n######## get data #############\nds<-readRDS(\"Data_all_seasons_interpolate.RDS\")\n\n# show timeseries of site 11\nx<-ds[[2]][[3]]\nplot(NA, xlim=range(1:28+1983),ylim=c(0,1.7),xlab=\"year\",ylab=\"Chl-a\")\nfor(i in 1:9){\n  lines(1:28+1983, x[[i]][11,],col=rainbow(9)[i])\n}\nlegend(\"top\", names(x), pch=20,col=rainbow(9), horiz=T)\n\n\n# get two layers (75m-layer contributed to both shallow and deep)  \ndif.depth<-c(5, 10, 10, 15, 22.5, 25, 25, 25, 25)\nDS.two<-vector(\"list\", 4)\nnames(DS.two)<-names(ds)\nfor(i.season in 1:4){\n  X.top<-vector(\"list\",3)\n  names(X.top)<-names(ds[[i.season]])\n  X.bottom<-X.top\n  for(f in 1:3){\n    x<-ds[[i.season]][[f]]\n    x.top<-0\n    for(i in 1:5){\n      x.top<-x.top+x[[i]]*dif.depth[i]\n    }\n    x.top<-x.top+x[[6]]*dif.depth[6]/2\n    x.bottom<-(x[[7]]+x[[8]]+x[[9]])*25+x[[6]]*dif.depth[6]/2\n    x.top<-x.top/(sum(dif.depth[1:5])+dif.depth[6]/2)\n    x.bottom<-x.bottom/(sum(dif.depth[7:9])+dif.depth[6]/2)\n    \n    index<-c(1, 2, 8, 14, 15, 22:25, 32:35, 43:47, 3:7, 9:13, 16:21, 26:31, 36:42, 48:55)\n    X.top[[f]]<-x.top[index,]\n    X.bottom[[f]]<-x.bottom[index,]\n  }\n  ds.two<-list(shallow=X.top, deep=X.bottom)\n  DS.two[[i.season]]<-ds.two\n}\nsaveRDS(DS.two,\"Data_TwoLayers.RDS\")\n\nfor(i.season in 1:4){\n  for(f in 1:3){\n    tmp<-CleanData(DS.two[[i.season]][[1]][[f]], normalize=F, detrend=T, rescale=F, do.plot=F)\n    DS.two[[i.season]][[1]][[f]]<-tmp$cleandat\n    tmp<-CleanData(DS.two[[i.season]][[2]][[f]], normalize=F, detrend=T, rescale=F, do.plot=F)\n    DS.two[[i.season]][[2]][[f]]<-tmp$cleandat\n  }\n}\nsaveRDS(DS.two,\"Data_TwoLayers_detrend.RDS\")\n\n\n###### fig.test: show all the timeseries, and the index of sites #########\nds.two<-readRDS(\"Data_TwoLayers.RDS\")\ni.season<-2 #spring\nds.two<-ds.two[[i.season]]\n\nc.top<-ds.two[[1]][[3]]\nc.bottom<-ds.two[[2]][[3]]\n\nnetwork_layout.site<-function(input.site){\n  n.site<-length(input.site)\n  site.coordinate<-read.csv(file=\"CalCOFIStaPos113.csv\")\n  Site1<-site.coordinate$Line*10000+site.coordinate$Station\n  Site1[Site1==818046.9]<-820047\n  tmp<-match(input.site,Site1)\n  \n  longitude=-site.coordinate$Dlongitude[tmp]\n  latitude<-site.coordinate$Station.Dlatitude[tmp]\n  layout.position<-cbind(longitude,latitude)\n  return(layout.position)\n}\n\npositions<-network_layout.site(as.numeric(rownames(c.top)))\ntiff(\"fig_test_locations.tif\", width=7, height=7, units=\"in\",res=300,compression = \"lzw\")\nplot(positions[,1], positions[,2], pch=1, cex=3, xlab=\"longitude\", ylab=\"latitude\")\ntext(positions[,1], positions[,2], 1:55, cex=1)\ndev.off()\n\npdf(\"fig_test_timeseries_original.pdf\", width=12, height=17)\nop<-par(mfrow=c(11,5), oma=c(3,3,3,3), mar=c(1.5,1.5,1.5,1.5),mgp=c(2.2,0.5,0))\nfor(ii in 1:55){\n  plot(1:28+1983, c.top[ii,], xlab=NA, ylab=NA, pch=20, col=\"darkgreen\", cex.lab=1.2, yaxt=\"n\")\n  lines(1:28+1983, c.top[ii,],  col=\"darkgreen\")\n  axis(2,col.axis=\"darkgreen\",col.lab=\"darkgreen\")\n  \n  par(usr=c(par(\"usr\")[1:2], range(c.bottom[ii,])))\n  points(1:28+1983, c.bottom[ii,], pch=20, col=\"purple\")\n  lines(1:28+1983, c.bottom[ii,],  col=\"purple\")\n  axis(4,col.axis=\"purple\",col.lab=\"purple\")\n  \n  mtext(paste0(\"(\",ii,\")\"), side=3, line=-1.2, adj=0.05, cex=0.9, col=\"red\")\n}\npar(fig = c(0, 1, 0, 1), oma=c(0.5,0.5,1,0), mar = c(2.5, 2.5, 0, 0), mgp=c(1,0,0), new = TRUE)\nplot(NA, xlim=c(0,1),ylim=c(0,1), xlab=\"year\",ylab=\"concentration of Chl-a\",\n     type = \"n\", bty = \"n\", xaxt = \"n\", yaxt = \"n\", cex.lab=1.2, font.lab=1.5)\nlegend(\"top\", c(\"shallow\",\"deep\"), col=c(\"darkgreen\",\"purple\"),lty=\"solid\",pch=20, horiz=T,cex=1.2)\ndev.off()\n\n\n\n\n###### Fig2: Correlations between shallow and deep Chla  ##################\nds.two<-readRDS(\"Data_TwoLayers_detrend.RDS\")\ni.season<-2 #spring\nds.two<-ds.two[[i.season]]\n\nc.top<-ds.two[[1]][[3]]\nc.bottom<-ds.two[[2]][[3]]\n#get correlation between top and bottom values of Chla\nrr<-rep(NA, nrow(c.top))\nfor(i in 1:nrow(c.top)){\n  z<-cor.test(c.top[i,], c.bottom[i,])\n  rr[i]<-z$estimate\n}\ninds1<-which(rr<0)\ninds2<-which(rr>=0)\n\n##distance from shore\nnetwork_layout.site<-function(input.site){\n  n.site<-length(input.site)\n  site.coordinate<-read.csv(file=\"D:/KU/Work/CalCOFI/Locations/CalCOFIStaPos113.csv\")\n  Site1<-site.coordinate$Line*10000+site.coordinate$Station\n  Site1[Site1==818046.9]<-820047\n  tmp<-match(input.site,Site1)\n  \n  longitude=-site.coordinate$Dlongitude[tmp]\n  latitude<-site.coordinate$Station.Dlatitude[tmp]\n  layout.position<-cbind(longitude,latitude)\n  return(layout.position)\n}\nlocations<-network_layout.site(row.names(c.top))\n\nlibrary(geosphere)\nsite.coastal<-c(934026.4, 900027.7, 868032.5, 833039.4, 817043.5, 800050.5)\nloc.coastal<-network_layout.site(site.coastal)\nLine1<-as.numeric(row.names(c.top))%/%1000*0.1\nLine2<-site.coastal%/%1000*0.1\nLine2<-c(Line2,76.7)\nloc.coastal<-rbind(loc.coastal,c(-120.75,35.17))\ndists<-rep(NA,nrow(locations))\nfor(i in 1:nrow(locations)){\n  j<-which(abs(Line2-Line1[i])<0.5)\n  dists[i]<-distm(locations[i,], loc.coastal[j,])\n}\ndists<-dists*0.001  # m -> km\nsaveRDS(dists,\"res_distance_from_shore.RDS\")\n\n#### timeseries\ntiff(\"Fig2_correlation_ts_detrend.tif\", width=7, height=9, units=\"in\",res=300,compression = \"lzw\")\n#layout(matrix(c(1,2,3,3,4,4,5,6), nrow=2, ncol=4), widths=c(2,4,1,2), heights=c(1,1)); layout.show(6)\nlayout(matrix(c(1,3,5,2,3,5,2,4,5), nrow=3, ncol=3), widths=c(4,3,1), heights=c(2,5,3)); layout.show(5)\nop<-par(oma=c(0.5,0.5,0.5,0.5), mar=c(3.5,3.2,0.5,1.2),mgp=c(2.2,0.5,0))\n\nii<-38\nplot(1:28+1983, c.top[ii,], xlab=NA, ylab=NA, pch=20, col=\"darkgreen\", cex.lab=1.2, yaxt=\"n\")\nlines(1:28+1983, c.top[ii,],  col=\"darkgreen\")\naxis(2,col.axis=\"darkgreen\",col.lab=\"darkgreen\")\n\npar(usr=c(par(\"usr\")[1:2], range(c.bottom[ii,])))\npoints(1:28+1983, c.bottom[ii,], pch=20, col=\"purple\")\nlines(1:28+1983, c.bottom[ii,],  col=\"purple\")\naxis(4,col.axis=\"purple\",col.lab=\"purple\")\nmtext(paste0(\"(a)\"), side=3, line=-1.2, adj=0.05, cex=1)\n\nii<-24\nplot(1:28+1983, c.top[ii,], xlab=NA, ylab=NA, pch=20, col=\"darkgreen\", cex.lab=1.2, yaxt=\"n\")\nlines(1:28+1983, c.top[ii,],  col=\"darkgreen\")\naxis(2,col.axis=\"darkgreen\",col.lab=\"darkgreen\")\n\npar(usr=c(par(\"usr\")[1:2], range(c.bottom[ii,])))\npoints(1:28+1983, c.bottom[ii,], pch=20, col=\"purple\")\nlines(1:28+1983, c.bottom[ii,],  col=\"purple\")\naxis(4,col.axis=\"purple\",col.lab=\"purple\")\nlegend(\"topright\",c(\"shallow\",\"deep\"),col=c(\"darkgreen\",\"purple\"),lty=\"solid\",pch=20, horiz=T,cex=1.2)\nmtext(paste0(\"(b)\"), side=3, line=-1.2, adj=0.05, cex=1)\n\n\n#### map\n\n#cols1<-heat.colors(300)\n#cols2<-topo.colors(600)\n\npal1=colorRampPalette(c(\"yellow\", \"red\"), space=\"rgb\")\npal2=colorRampPalette(c( \"cyan\", \"blue\"), space=\"rgb\")\ncols1<-pal1(100)\ncols2<-pal2(100)\n#pie(rep(1, 100), col = cols1, labels=NA, border=NA)\n#pie(rep(1, 100), col = cols2, labels=NA, border=NA)\ncolors<-rep(NA, nrow(locations))\ncolors[inds1]<-cols1[ceiling(-100*rr[inds1])]\ncolors[inds2]<-cols2[ceiling(100*rr[inds2])]\n\nplot(locations[,1], locations[,2], col=colors, pch=20, xlab=\"longitude\", ylab=\"latitude\", cex=4, cex.lab=1.2)\npoints(locations[38,1], locations[38,2], col=\"darkgrey\", cex=5, pch=1)\npoints(locations[24,1], locations[24,2], col=\"darkgrey\", cex=5, pch=1)\ntext(locations[38,1], locations[38,2]+0.3, \"a\", col=\"black\",cex=1.1)\ntext(locations[24,1], locations[24,2]+0.3, \"b\", col=\"black\",cex=1.1)\nmtext(\"(c)\", side=3, line=-1.2, adj=0.05, cex=1)\n\n#color bar\nop<-par(mar = c(3.5, 0.5, 0.5, 3))  \nplot(c(0.8,1), c(-1,1), type='n', bty='n', xaxt='n', xlab='', yaxt='n', ylab='')\naxis(4, seq(-1,1,len=11), las=1, labels=seq(-1,1,len=11))\nscale<-length(cols2)-1\nfor (i in 1:(length(cols2)-1)) {\n  y = (i-1)/scale + 0\n  rect(0,y,10,y+1/scale, col=cols2[i], border=NA)\n}\n\nscale<-length(cols1)-1\nfor (i in 1:(length(cols1)-1)) {\n  y = (i-1)/scale - 1\n  rect(0,y,10,y+1/scale, col=cols1[101-i], border=NA)\n}\n\n\n#### correlations vs distance from shore\nop<-par(mar=c(3.5,3,0.5,0.5))\nplot(dists, rr, xlab=\"distance from shore (km)\", ylab=\"correlation\", pch=16, cex.lab=1.2)\n#points(dists[pp<0.05], rr[pp<0.05], pch=16)\nlines(c(-100,800),c(0,0),lty=\"dashed\")\nlines(c(240, 240),c(-1,1), lty=\"dashed\")\nmtext(\"(d)\", side=3, line=-1.2, adj=0.95)\ntext(100, -0.5, \"near-shore\", col=\"red\",cex=1.2)\ntext(500, 0.5, \"off-shore\", col=\"red\",cex=1.2)\n\npar(op)\ndev.off()\n\n",
    "created" : 1522636874855.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2609851824",
    "id" : "38C42616",
    "lastKnownWriteTime" : 1522820132,
    "last_content_update" : 1522820132716,
    "path" : "D:/Git/CalCOFI/main_TwoLayers_ts_correlation.R",
    "project_path" : "main_TwoLayers_ts_correlation.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}