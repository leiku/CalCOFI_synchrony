{
    "collab_server" : "",
    "contents" : "rm(list=ls())\nlibrary(Reumannplatz)\nlibrary(igraph)\n\n######### get clean data ############\nds<-readRDS(\"Data_all_seasons_interpolate.RDS\")\n\nds.clean<-ds\nfor(s in 1:4){\n  for(f in 1:3){  #factor \n    for(d in 1:9){ #depth\n      tmp1<-ds[[s]][[f]][[d]]\n      #y<-CleanData.mod(tmp1, each.ts=T)\n      y<-CleanData(tmp1, normalize=F, detrend=T, rescale=F, do.plot=F )\n      ds.clean[[s]][[f]][[d]]<-y$cleandat\n    }\n    show(f)\n  }\n}\n\n#saveRDS(ds.clean, \"Data_all_seasons_clean.RDS\")   # interpolate, normalize (Box-Cox), detrend, rescale\nsaveRDS(ds.clean, \"Data_all_seasons_detrend.RDS\")    # detrend\n\n######## synchrony network ###########\n\n#get position\nnetwork_layout.site<-function(input.site){\n  n.site<-length(input.site)\n  site.coordinate<-read.csv(file=\"CalCOFIStaPos113.csv\")\n  Site1<-site.coordinate$Line*10000+site.coordinate$Station\n  Site1[Site1==818046.9]<-820047\n  tmp<-match(input.site,Site1)\n  \n  longitude=-site.coordinate$Dlongitude[tmp]\n  latitude<-site.coordinate$Station.Dlatitude[tmp]\n  layout.position<-cbind(longitude,latitude)\n  return(layout.position)\n}\n\n#plot\nplot.cluster.Calcofi<-function(figure.name, members0, node.contribution, locations, name.depth){\n  tiff(figure.name, \n       width=8, height=8, units=\"in\",res=300,compression = \"lzw\")\n  op<-par(mfrow=c(3,3),oma=c(3,3,1,1), mar=c(1,1,1,1),mgp=c(2,0.5,0))\n  n.m<-length(unique(members0))\n  if(n.m>3){stop(\"The number of modules is larger than 2. Please change the color setting\")}\n  inds1<-which(members0==1)\n  inds2<-which(members0==2)\n  cols1<-heat.colors(1000)\n  cols2<-terrain.colors(1000)\n  colors<-rep(NA, length(members0))\n  colors[inds1]<-cols1[500-round(500*node.contribution[inds1])+1]\n  colors[inds2]<-cols2[350-round(350*node.contribution[inds2])+1]\n  if(n.m>2){inds3<-which(members0==3); cols3<-topo.colors(1000); colors[inds3]<-cols3[300-round(300*node.contribution[inds3])+1]}\n  \n  for(d in 1:9){\n    a<-55*(d-1)+1; b<-55*d\n    plot(locations[,1], locations[,2], col=colors[a:b], pch=20, xlab=NA, ylab=NA, cex=3)\n    mtext(paste0(\"(\", letters[d],\")\"), side=3, line=-1.2, adj=0.05, cex=0.8)\n    mtext(paste0(\"(\",name.depth[d],\" m)\"), side=1, line=-1.2, adj=0.95, cex=0.8)\n  }\n  par(fig = c(0, 1, 0, 1), oma=c(1,1,0,0), mar = c(3, 3, 0, 0), new = TRUE)\n  plot(NA, xlim=c(0,1),ylim=c(0,1), xlab=\"Longitude\",ylab=\"Latitude\",\n       type = \"n\", bty = \"n\", xaxt = \"n\", yaxt = \"n\", cex.lab=1.2, font.lab=2)\n  par(op)\n  dev.off()\n}\n\n#################### for original data\nsource('SynNetModulesSimple.mod.pearson.R')\nsource('Fn_newman_eigenvector_mod.R')\nsource('Fn_newman_modularity_mod.R')\n\nds<-readRDS(\"Data_all_seasons_detrend.RDS\")    # detrend  (should use detrend data or original data?)\ni.season<-2 #spring\n\nds1<-ds[[i.season]][[3]]\nds2<-ds1[[1]]\nfor(d in 2:9){\n  ds2<-rbind(ds2, ds1[[d]])\n}\n\nname.season<-names(ds)\nname.depth<-names(ds[[1]][[1]])[1:9]\nSites<-as.integer(row.names(ds[[1]][[1]][[1]]))\nlocations<-network_layout.site(Sites)\n\n#plot \n#ans<-SynNetModules(ds2, 1:28, coords=NA, method=\"pearson\", nsurrogs = NA, do.plot=F) # errors: the output synmat is a function\n#decomp<-ModularityDecomp(ans$synmat, ans$modules$membership)   # errors: it is not for negative networks\n\nans<-SynNetModulesSimple.mod.pearson(ds2, 1:28)\nmembers<-ans$modules$membership\ndecomp<-newman_modularity_mod(ans$synmat, members, decomp=T)\nplot.cluster.Calcofi(paste0(\"Fig1_cluster_membership_negative_\",name.season[i.season],\"_pearson_detrend.tif\"), \n                     members, decomp$Q.decomp.node.rescale, locations=locations, name.depth=name.depth)\n\n\n\n",
    "created" : 1522611997286.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3320889757",
    "id" : "2253D38A",
    "lastKnownWriteTime" : 1522620920,
    "last_content_update" : 1522620920044,
    "path" : "D:/Git/CalCOFI/main_network.R",
    "project_path" : "main_network.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}